import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useAuth0 } from "@auth0/auth0-react";
import { useMemo, useState } from "react";

export default function Home() {
  const {
    isAuthenticated,
    user,
    loginWithRedirect,
    logout,
    getAccessTokenSilently,
  } = useAuth0();

  const [token, setToken] = useState<string>();

  const status = isAuthenticated ? "true" : "false";

  const decodedPayload = useMemo(() => {
    const payload = token
      ? JSON.parse(Buffer.from(token.split(".")[1], "base64").toString())
      : "";
    return payload;
  }, [token]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            gap: "2rem",
            width: "100%",
          }}
        >
          <button
            onClick={
              isAuthenticated
                ? () => logout()
                : () =>
                    loginWithRedirect({
                      authorizationParams: { prompt: "login" },
                    })
            }
          >
            {isAuthenticated ? "Log out" : "Sign in"}
          </button>
          <div>isAuthenticated = {status}</div>

          <div>
            <label>User</label>
            <textarea
              readOnly
              style={{ width: "100%", height: "400px" }}
              value={JSON.stringify(user, null, 2)}
            />
          </div>

          <button
            onClick={async () => {
              try {
                const token = await getAccessTokenSilently();
                setToken(token);
              } catch (e) {
                console.error(e);
                setToken("");
              }
            }}
          >
            Call API (uses getAccessTokenSilently())
          </button>
          <div>
            <label>Decoded access token payload</label>
            <textarea
              readOnly
              style={{ width: "100%", height: "400px" }}
              value={JSON.stringify(decodedPayload, null, 2)}
            />
          </div>
        </div>
      </main>
    </>
  );
}
